import tensorflow as tf
import keras
from keras import layers

# label input
label_input = layers.Input(shape = (None, 1))
label_branch = layers.Embedding(input_dim = 25, output_dim = 50)(label_input)
label_branch = layers.Dense(1000)(label_branch)
label_branch = layers.Reshape((32, 64, 1))(label_branch)

# noise input
noise_input = layers.Input(shape = (None, 1000))
noise_branch = layers.Dense(524288)(noise_input)
noise_branch = layers.Activation('relu')(noise_branch)
noise_branch = layers.Reshape((32, 64, 256))(noise_branch)

# merged model
merged_input = layers.Concatenate()([noise_branch, label_branch])

merged_branch = layers.Conv2DTranspose(
    256, (5, 5), 
    strides = (2, 2), 
    padding = 'same', 
    input_shape = (32, 64, 257),
)(merged_input)
merged_branch = layers.BatchNormalization()(merged_branch)
merged_branch = layers.Activation('relu')(merged_branch)

merged_branch = layers.Conv2DTranspose(
    256, (5, 5), 
    strides = (2, 2), 
    padding = 'same', 
    input_shape = (64, 128, 128),
)(merged_input)
merged_branch = layers.BatchNormalization()(merged_branch)
merged_branch = layers.Activation('relu')(merged_branch)

merged_branch = layers.Conv2DTranspose(
    128, (5, 5), 
    strides = (2, 2), 
    padding = 'same', 
    input_shape = (128, 256, 3),
)(merged_branch)

image_output = layers.Activation('tanh')(merged_branch)

generator = keras.Model(
    inputs = [noise_input, label_input],
    outputs = image_output,
)

print(generator.summary())
print()